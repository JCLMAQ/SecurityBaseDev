(model.Group.collectionMethods.addOneUserToGroups = function(theSelectedRow,userID) {	var theUser = ds.User(userID);	var currentGroupCollection = this;	theSelectedRow.forEach(function (rowNum){		// find the ID of the group from the row		var groupID = currentGroupCollection[rowNum].ID;		var existing = ds.UserGroup.find("group.ID == :1 && user.ID == :2", groupID, userID);		if(!existing){			new ds.UserGroup({user: theUser, group: groupID}).save();//			//return true;		}	});}).scope="public";(model.Group.collectionMethods.removeOneUserFromGroups = function(theSelectedRow,userID) {	var theUser = ds.User(userID);	var currentGroupCollection = this;	theSelectedRow.forEach(function (rowNum){		// find the ID of the group from the row		var groupID = currentGroupCollection[rowNum].ID;		var matches = ds.UserGroup.query("group.ID == :1 && user.ID == :2", groupID, userID);		if(matches.length > 0){			matches.remove();			//return true;		}			});}).scope="public";